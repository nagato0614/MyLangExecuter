digraph {
    0 [ label = "\"0: Declaration(Type(Int))\"" ]
    1 [ label = "\"1: Token(Identifier(\\\"a\\\"))\"" ]
    2 [ label = "\"2: Token(Operator(Plus))\"" ]
    3 [ label = "\"3: ParenthesizedExpression\"" ]
    4 [ label = "\"4: UnaryExpression(Minus)\"" ]
    5 [ label = "\"5: ParenthesizedExpression\"" ]
    6 [ label = "\"6: Token(Operator(LogicalOr))\"" ]
    7 [ label = "\"7: Token(Operator(Plus))\"" ]
    8 [ label = "\"8: UnaryExpression(Minus)\"" ]
    9 [ label = "\"9: ParenthesizedExpression\"" ]
    10 [ label = "\"10: Token(Operator(Plus))\"" ]
    11 [ label = "\"11: Token(Constant(Integer(1)))\"" ]
    12 [ label = "\"12: Token(Operator(Multiply))\"" ]
    13 [ label = "\"13: Token(Constant(Integer(2)))\"" ]
    14 [ label = "\"14: Token(Operator(Divide))\"" ]
    15 [ label = "\"15: Token(Constant(Integer(3)))\"" ]
    16 [ label = "\"16: Token(Constant(Integer(4)))\"" ]
    17 [ label = "\"17: Token(Constant(Integer(5)))\"" ]
    18 [ label = "\"18: Token(Operator(Plus))\"" ]
    19 [ label = "\"19: Token(Constant(Integer(1)))\"" ]
    20 [ label = "\"20: Function Call [\\\"b\\\"]\"" ]
    21 [ label = "\"21: ArrayAccess\"" ]
    22 [ label = "\"22: Token(Identifier(\\\"c\\\"))\"" ]
    23 [ label = "\"23: Token(Constant(Integer(1)))\"" ]
    0 -> 1 [ ]
    10 -> 11 [ ]
    12 -> 13 [ ]
    14 -> 15 [ ]
    14 -> 16 [ ]
    12 -> 14 [ ]
    10 -> 12 [ ]
    9 -> 10 [ ]
    8 -> 9 [ ]
    7 -> 8 [ ]
    7 -> 17 [ ]
    6 -> 7 [ ]
    18 -> 19 [ ]
    18 -> 20 [ ]
    6 -> 18 [ ]
    5 -> 6 [ ]
    4 -> 5 [ ]
    3 -> 4 [ ]
    2 -> 3 [ ]
    21 -> 22 [ ]
    21 -> 23 [ ]
    2 -> 21 [ ]
    0 -> 2 [ ]
}
